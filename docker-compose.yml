services:
  frontend:
    image: discov-cursor-frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    ports:
      - "3000:3000"
    environment:
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 5s
      timeout: 2s
      retries: 20
    profiles: ["dev", "e2e"]
  backend:
    image: discov-cursor-backend
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: app
    volumes:
      - ./backend:/app
      - backend_node_modules:/app/node_modules
    ports:
      - "4000:4000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgres://postgres:postgres@db:5432/postgres
    depends_on:
      - db
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/todos"]
      interval: 5s
      timeout: 2s
      retries: 20
    profiles: ["dev", "e2e"]
  backend-test:
    image: discov-cursor-backend-test
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: test
    environment:
      - NODE_ENV=test
      - DATABASE_URL=postgres://postgres:postgres@db:5432/postgres
    depends_on:
      db:
        condition: service_healthy
    profiles: ["test"]
  frontend-test:
    image: discov-cursor-frontend-test
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: test
      args:
        REACT_APP_API_URL: http://backend-test:4000
    environment:
      - NODE_ENV=test
    depends_on:
      - backend-test
    profiles: ["test"]
  frontend-server-test:
    image: discov-cursor-frontend-server-test
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: prod-server
      args:
        REACT_APP_API_URL: http://backend-server-test:4000
    environment:
      - NODE_ENV=test
    depends_on:
      - backend-server-test
    profiles: ["test"]
  frontend-e2e-test:
    image: discov-cursor-frontend-e2e
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: test-e2e
    environment:
      - NODE_ENV=test
    depends_on:
      - frontend-server-test
      - backend-server-test
    profiles: ["test"]
  backend-api-test:
    image: discov-cursor-backend-api-test
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: test-api
    environment:
      - NODE_ENV=test
      - DATABASE_URL=postgres://postgres:postgres@db:5432/postgres
      - BASE_URL=http://backend-server-test:4000
    depends_on:
      - backend-server-test
    profiles: ["test"]
  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./db:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 2s
      retries: 20
    profiles: ["dev", "test"]
  backend-server-test:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: app
    environment:
      - NODE_ENV=test
      - DATABASE_URL=postgres://postgres:postgres@db:5432/postgres
    depends_on:
      - db
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/todos"]
      interval: 5s
      timeout: 2s
      retries: 20
    profiles: ["test"]

volumes:
  pgdata: 
  frontend_node_modules:
  backend_node_modules: 