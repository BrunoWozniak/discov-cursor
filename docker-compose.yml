services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    ports:
      - "3000:3000"
    environment:
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 5s
      timeout: 2s
      retries: 20
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/app
      - backend_node_modules:/app/node_modules
    ports:
      - "4000:4000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgres://postgres:postgres@db:5432/postgres
    depends_on:
      - db
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/todos"]
      interval: 5s
      timeout: 2s
      retries: 20
  backend-test:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: test
    environment:
      - NODE_ENV=test
      - DATABASE_URL=postgres://postgres:postgres@db:5432/postgres
    depends_on:
      - db
  frontend-test:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: test
    environment:
      - NODE_ENV=test
    depends_on:
      - backend
  frontend-e2e-test:
    image: discov-cursor-frontend-e2e
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: test-e2e
    environment:
      - NODE_ENV=test
    depends_on:
      - frontend
      - backend
  backend-api-test:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: test-api
    environment:
      - NODE_ENV=test
      - DATABASE_URL=postgres://postgres:postgres@db:5432/postgres
    depends_on:
      - db
      - backend
  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./db:/docker-entrypoint-initdb.d
volumes:
  pgdata: 
  frontend_node_modules:
  backend_node_modules: 